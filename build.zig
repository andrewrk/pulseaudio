const std = @import("std");

pub fn build(b: *std.Build) void {
    const target = b.standardTargetOptions(.{});
    const optimize = b.standardOptimizeOption(.{});
    const t = target.result;

    const lib = b.addStaticLibrary(.{
        .name = "pulse",
        .target = target,
        .optimize = optimize,
    });
    lib.linkLibC();
    lib.addIncludePath(.{ .path = "src" });

    const config_values = .{
        .DESKTOPFILEDIR = "/usr/local/share/applications",
        .DISABLE_LIBTOOL_PRELOAD = 1,
        .DISABLE_ORC = 1,
        .ENABLE_LEGACY_DATABASE_ENTRY_FORMAT = 1,
        .ENABLE_NLS = 1,
        .GETGROUPS_T = .gid_t,
        .GETTEXT_PACKAGE = "pulseaudio",
        .HAVE_ACCEPT4 = 1,
        .HAVE_ARPA_INET_H = 1,
        .HAVE_ATOMIC_BUILTINS = 1,
        .HAVE_ATOMIC_BUILTINS_MEMORY_MODEL = 1,
        .HAVE_BYTESWAP_H = 1,
        .HAVE_CLOCK_GETTIME = 1,
        .HAVE_COREAUDIO = 0,
        .HAVE_CPUID_H = have(t.cpu.arch.isX86()),
        .HAVE_CTIME_R = 1,
        .HAVE_DECL_ENVIRON = 1,
        .HAVE_DECL_SOUND_PCM_READ_BITS = 1,
        .HAVE_DECL_SOUND_PCM_READ_CHANNELS = 1,
        .HAVE_DECL_SOUND_PCM_READ_RATE = 1,
        .HAVE_DLADDR = null,
        .HAVE_DLFCN_H = 1,
        .HAVE_EXECINFO_H = null,
        .HAVE_FAST_64BIT_OPERATIONS = 1,
        .HAVE_FCHMOD = 1,
        .HAVE_FCHOWN = 1,
        .HAVE_FORK = 1,
        .HAVE_FSTAT = 1,
        .HAVE_GETADDRINFO = 1,
        .HAVE_GETGRGID_R = 1,
        .HAVE_GETGRNAM_R = 1,
        .HAVE_GETPWNAM_R = 1,
        .HAVE_GETPWUID_R = 1,
        .HAVE_GETTIMEOFDAY = 1,
        .HAVE_GETUID = 1,
        .HAVE_GRP_H = 1,
        .HAVE_HAL_COMPAT = 1,
        .HAVE_ICONV = 1,
        .HAVE_IPV6 = 1,
        .HAVE_LANGINFO_H = 1,
        .HAVE_LINUX_SOCKIOS_H = 1,
        .HAVE_LOCALE_H = 1,
        .HAVE_LRINTF = 1,
        .HAVE_LSTAT = 1,
        .HAVE_MEMFD = 1,
        .HAVE_MEMFD_CREATE = 1,
        .HAVE_MKFIFO = 1,
        .HAVE_MLOCK = 1,
        .HAVE_NANOSLEEP = 1,
        .HAVE_NETDB_H = 1,
        .HAVE_NETINET_IN_H = 1,
        .HAVE_NETINET_IN_SYSTM_H = 1,
        .HAVE_NETINET_IP_H = 1,
        .HAVE_NETINET_TCP_H = 1,
        .HAVE_OPEN64 = 1,
        .HAVE_OSS_OUTPUT = 1,
        .HAVE_OSS_WRAPPER = 1,
        .HAVE_PIPE = 1,
        .HAVE_PIPE2 = 1,
        .HAVE_POLL_H = 1,
        .HAVE_POSIX_FADVISE = 1,
        .HAVE_POSIX_MADVISE = 1,
        .HAVE_POSIX_MEMALIGN = 1,
        .HAVE_PPOLL = 1,
        .HAVE_PTHREAD = 1,
        .HAVE_PTHREAD_GETNAME_NP = 1,
        .HAVE_PTHREAD_PRIO_INHERIT = 1,
        .HAVE_PTHREAD_SETAFFINITY_NP = 1,
        .HAVE_PTHREAD_SETNAME_NP = 1,
        .HAVE_PWD_H = 1,
        .HAVE_READLINK = 1,
        .HAVE_REGEX_H = 1,
        .HAVE_RUNNING_FROM_BUILD_TREE = 1,
        .HAVE_SCHED_H = 1,
        .HAVE_SETEGID = 1,
        .HAVE_SETEUID = 1,
        .HAVE_SETPGID = 1,
        .HAVE_SETREGID = 1,
        .HAVE_SETRESGID = 1,
        .HAVE_SETRESUID = 1,
        .HAVE_SETREUID = 1,
        .HAVE_SETSID = 1,
        .HAVE_SHM_OPEN = 1,
        .HAVE_SIGACTION = 1,
        .HAVE_SIGXCPU = 1,
        .HAVE_STDINT_H = 1,
        .HAVE_STD_BOOL = 1,
        .HAVE_STRERROR_R = 1,
        .HAVE_STRTOD_L = 1,
        .HAVE_STRTOF = 1,
        .HAVE_SYMLINK = 1,
        .HAVE_SYSCONF = 1,
        .HAVE_SYSLOG_H = 1,
        .HAVE_SYS_EVENTFD_H = 1,
        .HAVE_SYS_IOCTL_H = 1,
        .HAVE_SYS_MMAN_H = 1,
        .HAVE_SYS_PRCTL_H = 1,
        .HAVE_SYS_RESOURCE_H = 1,
        .HAVE_SYS_SELECT_H = 1,
        .HAVE_SYS_SOCKET_H = 1,
        .HAVE_SYS_SYSCALL_H = 1,
        .HAVE_SYS_UIO_H = 1,
        .HAVE_SYS_UN_H = 1,
        .HAVE_SYS_WAIT_H = 1,
        .HAVE_UNAME = 1,
        .HAVE_WAVEOUT = 0,
        .ICONV_CONST = {},
        .MESON_BUILD = 1,
        .PACKAGE = "pulseaudio",
        .PACKAGE_NAME = "pulseaudio",
        .PACKAGE_VERSION = "16.1-ge5ad",
        .PA_ACCESS_GROUP = "pulse-access",
        .PA_ALSA_PATHS_DIR = "/usr/local/share/pulseaudio/alsa-mixer/paths",
        .PA_ALSA_PROFILE_SETS_DIR = "/usr/local/share/pulseaudio/alsa-mixer/profile-sets",
        .PA_API_VERSION = 12,
        .PA_BINARY = "/usr/local/bin/pulseaudio",
        .PA_BUILDDIR = "/home/pulseaudio/build",
        .PA_CFLAGS = "Not yet supported on meson",
        .PA_DEFAULT_CONFIG_DIR = "/usr/local/etc/pulse",
        .PA_DLSEARCHPATH = "/usr/local/lib/pulse-16.1/modules",
        .PA_INCDIR = .@"/usr/local/include",
        .PA_LIBDIR = .@"/usr/local/lib",
        .PA_MACHINE_ID = "/usr/local/etc/machine-id",
        .PA_MACHINE_ID_FALLBACK = "/var/local/lib/dbus/machine-id",
        .PA_MAJOR = 16,
        .PA_MINOR = 1,
        .PA_PROTOCOL_VERSION = 35,
        .PA_SOEXT = ".so",
        .PA_SRCDIR = "/home/pulseaudio/src",
        .PA_SYSTEM_CONFIG_PATH = "/var/local/lib/pulse",
        .PA_SYSTEM_GROUP = "pulse",
        .PA_SYSTEM_RUNTIME_PATH = "/var/local/run/pulse",
        .PA_SYSTEM_STATE_PATH = "/var/local/lib/pulse",
        .PA_SYSTEM_USER = "pulse",
        .PULSEDSP_LOCATION = .@"/usr/local/lib/pulseaudio",
        .PULSE_LOCALEDIR = "/usr/local/share/locale",
        .top_srcdir = .@"/home/pulseaudio",
    };

    lib.addConfigHeader(b.addConfigHeader(.{
        .style = .blank,
    }, config_values));

    const version_header = b.addConfigHeader(.{ .style = .{
        .cmake = std.Build.LazyPath.relative("./src/pulse/version.h.in"),
    } }, config_values);

    lib.addConfigHeader(version_header);

    lib.addCSourceFiles(.{
        .files = &.{
            "src/pulse/channelmap.c",
            "src/pulse/client-conf.c",
            "src/pulse/context.c",
            "src/pulse/direction.c",
            "src/pulse/error.c",
            "src/pulse/ext-device-manager.c",
            "src/pulse/ext-device-restore.c",
            "src/pulse/ext-stream-restore.c",
            "src/pulse/fork-detect.c",
            "src/pulse/format.c",
            "src/pulse/introspect.c",
            "src/pulse/mainloop-api.c",
            "src/pulse/mainloop-signal.c",
            "src/pulse/mainloop.c",
            "src/pulse/operation.c",
            "src/pulse/proplist.c",
            "src/pulse/rtclock.c",
            "src/pulse/sample.c",
            "src/pulse/scache.c",
            "src/pulse/stream.c",
            "src/pulse/subscribe.c",
            "src/pulse/thread-mainloop.c",
            "src/pulse/timeval.c",
            "src/pulse/utf8.c",
            "src/pulse/util.c",
            "src/pulse/volume.c",
            "src/pulse/xmalloc.c",
            "src/pulsecore/arpa-inet.c",
            "src/pulsecore/aupdate.c",
            "src/pulsecore/authkey.c",
            "src/pulsecore/bitset.c",
            "src/pulsecore/conf-parser.c",
            "src/pulsecore/core-error.c",
            "src/pulsecore/core-format.c",
            "src/pulsecore/core-rtclock.c",
            "src/pulsecore/core-util.c",
            "src/pulsecore/dynarray.c",
            "src/pulsecore/fdsem.c",
            "src/pulsecore/flist.c",
            "src/pulsecore/g711.c",
            "src/pulsecore/hashmap.c",
            "src/pulsecore/i18n.c",
            "src/pulsecore/idxset.c",
            "src/pulsecore/iochannel.c",
            "src/pulsecore/ioline.c",
            "src/pulsecore/ipacl.c",
            "src/pulsecore/json.c",
            "src/pulsecore/lock-autospawn.c",
            "src/pulsecore/log.c",
            "src/pulsecore/mcalign.c",
            "src/pulsecore/memblock.c",
            "src/pulsecore/memblockq.c",
            "src/pulsecore/memchunk.c",
            "src/pulsecore/memtrap.c",
            "src/pulsecore/mutex-posix.c",
            "src/pulsecore/native-common.c",
            "src/pulsecore/once.c",
            "src/pulsecore/packet.c",
            "src/pulsecore/parseaddr.c",
            "src/pulsecore/pdispatch.c",
            "src/pulsecore/pid.c",
            "src/pulsecore/pipe.c",
            "src/pulsecore/proplist-util.c",
            "src/pulsecore/pstream-util.c",
            "src/pulsecore/pstream.c",
            "src/pulsecore/queue.c",
            "src/pulsecore/random.c",
            "src/pulsecore/ratelimit.c",
            "src/pulsecore/sample-util.c",
            "src/pulsecore/semaphore-posix.c",
            "src/pulsecore/shm.c",
            "src/pulsecore/socket-client.c",
            "src/pulsecore/socket-server.c",
            "src/pulsecore/socket-util.c",
            "src/pulsecore/srbchannel.c",
            "src/pulsecore/strbuf.c",
            "src/pulsecore/strlist.c",
            "src/pulsecore/tagstruct.c",
            "src/pulsecore/thread-posix.c",
            "src/pulsecore/time-smoother.c",
            "src/pulsecore/tokenizer.c",
            "src/pulsecore/usergroup.c",
        },
        .flags = &.{
            "-std=gnu11",
            "-DHAVE_CONFIG_H=1",
            "-D_GNU_SOURCE",
        },
    });
    lib.installHeadersDirectoryOptions(.{
        .source_dir = .{ .path = "src/pulse" },
        .install_dir = .header,
        .install_subdir = "pulse",
        .exclude_extensions = &.{ ".c", ".h.in" },
    });

    const install_version = b.addInstallFile(version_header.getOutput(), "include/pulse/version.h");
    b.getInstallStep().dependOn(&install_version.step);
    b.installArtifact(lib);
}

fn have(b: bool) ?c_int {
    if (b) {
        return 1;
    } else {
        return null;
    }
}
